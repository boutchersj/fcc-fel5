{"version":3,"sources":["Break.js","Timer.js","Sesh.js","Pomodoro.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Break","props","react_default","a","createElement","className","id","class","onClick","breakIncrement","breakTime","breakDecrement","Timer","minutes","seconds","handleTime","handleReset","Sesh","seshIncrement","seshTime","seshDecrement","Pomodoro","src","logo","alt","src_Break","src_Timer","src_Sesh","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","handleBreakIncrement","handleBreakDecrement","handleSeshIncrement","handleSeshDecrement","_this2","setTimeout","getSeconds","setState","prevState","Number","clearInterval","getMinutes","alert","src_Pomodoro","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6892d1bd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Break(props) {\r\n    return (\r\n    <div className=\"flex-third\">\r\n\r\n        <h3 id=\"break-label\">Break Length</h3>\r\n        <p class=\"incDec\" id=\"break-increment\" onClick={props.breakIncrement}>+</p>\r\n        <p id=\"break-length\">{props.breakTime}</p>\r\n        <p class=\"incDec\" id=\"break-decrement\" onClick={props.breakDecrement}>-</p>\r\n        \r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Break","import React from 'react'\r\n\r\nfunction Timer(props){\r\n\r\n    return (\r\n        <div className=\"flex-third\" id=\"timer\">\r\n\r\n            <h3 id=\"timer-label\">Session</h3>\r\n\r\n            <div id=\"time-left\">\r\n            {props.minutes}:{props.seconds}\r\n            </div>\r\n\r\n            <div className=\"timer-buttons\">\r\n            <p id=\"start_stop\" onClick={props.handleTime}>Start/Stop</p>\r\n            <p id=\"reset\" onClick={props.handleReset}>Reset</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timer","import React from 'react'\r\n\r\nfunction Sesh(props) {\r\n\r\n    return (\r\n        <div className=\"flex-third\">\r\n\r\n            <h3 id=\"session-label\">Session Length</h3>\r\n            <p class=\"incDec\" id=\"session-increment\" onClick={props.seshIncrement}>+</p>\r\n            <p id=\"session-length\">{props.seshTime}</p>\r\n            <p class=\"incDec\" id=\"session-decrement\" onClick={props.seshDecrement}>-</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sesh","import React from 'react'\r\nimport Break from './Break'\r\nimport Timer from './Timer'\r\nimport Sesh from './Sesh'\r\n\r\nfunction Pomodoro(props) {\r\n\r\n    return (\r\n        <div id=\"whole-app\">\r\n\r\n            <header id=\"Header\">\r\n                <img src={props.logo} className=\"App-logo\" alt=\"logo\" />\r\n                <h1>Steven's Pomodoro Clock</h1>\r\n            </header>\r\n\r\n            <main id=\"Main\">\r\n\r\n                <Break\r\n                    breakIncrement = {props.breakIncrement}\r\n                    breakTime = {props.breakTime}\r\n                    breakDecrement = {props.breakDecrement}\r\n                />\r\n\r\n                <Timer\r\n                    handleTime = {props.handleTime}\r\n                    handleReset = {props.handleReset}\r\n                    minutes = {props.minutes}\r\n                    seconds = {props.seconds}\r\n                />\r\n\r\n                <Sesh\r\n                    seshIncrement = {props.seshIncrement}\r\n                    seshTime = {props.seshTime}\r\n                    seshDecrement = {props.seshDecrement}\r\n                />\r\n\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pomodoro","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Pomodoro from './Pomodoro'\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state = {\n      \"breakTime\": \"5\",\n      \"seshTime\": \"25\",\n      \"minutes\": \"25\",\n      \"seconds\": \"00\",\n    }\n    this.handleTime = this.handleTime.bind(this)\n    this.handleReset = this.handleReset.bind(this)\n    this.handleBreakIncrement = this.handleBreakIncrement.bind(this)\n    this.handleBreakDecrement = this.handleBreakDecrement.bind(this)\n    this.handleSeshIncrement = this.handleSeshIncrement.bind(this)\n    this.handleSeshDecrement = this.handleSeshDecrement.bind(this)\n  }\n  handleTime() {\n    const getSeconds = () => {\n      this.setState(prevState => {\n        if (\n          Number(this.state.minutes) === 0 &&\n          Number(this.state.seconds === 0)\n        ) {\n          clearInterval(getSeconds);\n          return { seconds: \"00\" };\n        } else if (\n          Number(this.state.minutes) !== 0 &&\n          Number(this.state.seconds === 0)\n        ) {\n          return { seconds: \"59\" };\n        }\n        return { seconds: Number(prevState.seconds) - 1 };\n      });\n    };\n\n    const getMinutes = () => {\n      this.setState(prevState => {\n        if (\n          Number(this.state.minutes) === 0 &&\n          Number(this.state.seconds) === 0\n        ) {\n          alert(\"Time's up!\");\n          clearInterval(getMinutes);\n          return { minutes: \"0\" };\n        }\n        return { minutes: Number(prevState.minutes) - 1 };\n      });\n    };\n    setTimeout(getSeconds, 1000);\n    setTimeout(getMinutes, 60000);\n  }\n\n  handleReset() {\n    this.setState({\n      minutes: this.state.seshTime,\n      seconds: \"00\"\n    })\n  }\n  handleBreakIncrement() {\n    this.setState(prevState => {\n      return {breakTime: Number(prevState.breakTime) + 1}\n    })\n  }\n  handleBreakDecrement() {\n    if (this.state.breakTime === 0) {\n      this.setState({breakTime: 0})\n    }\n    else {\n      this.setState(prevState => {\n        return {breakTime: Number(prevState.breakTime) - 1}\n      })\n    }\n  }\n  handleSeshIncrement() {\n    this.setState(prevState => {\n      return {\n        seshTime: Number(prevState.seshTime) + 1\n      }\n    })\n    this.setState(prevState => {\n      return { \n        minutes: prevState.seshTime,\n        seconds: \"00\"\n      }\n    })\n  }\n  handleSeshDecrement() {\n    if (this.state.seshTime === 0){\n      this.setState({seshTime: 0})\n    }\n    else {\n      this.setState(prevState => {\n        return {seshTime: Number(prevState.seshTime) - 1}\n      })\n    }\n    this.setState(prevState => {\n      return { \n        minutes: prevState.seshTime,\n        seconds: \"00\"\n      }\n    })\n  }\n  render() {\n    return (\n      <Pomodoro\n        logo = {logo}\n        handleTime = {this.handleTime}\n        handleReset = {this.handleReset}\n        breakIncrement = {this.handleBreakIncrement}\n        breakTime = {this.state.breakTime}\n        breakDecrement = {this.handleBreakDecrement}\n        seshIncrement = {this.handleSeshIncrement}\n        seshTime = {this.state.seshTime}\n        seshDecrement = {this.handleSeshDecrement}\n        minutes = {this.state.minutes}\n        seconds = {this.state.seconds}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}